name: Run testnet tests

on:
  workflow_dispatch:
  # schedule:
  #   - cron:  '33 */3 * * *'

# todo: matrix run against testnet + devnets based on networks specified in config repo
jobs:
  smoke-tests:
    name: Run smoke tests
    runs-on: ubuntu-20.04
    steps:
      - name: Clone network configs
        uses: actions/checkout@v3
        with:
          repository: dashevo/dash-network-configs
          token: ${{ secrets.GH_PAT }}

      - name: Download network deploy tool wrapper
        run: |
          mkdir -p ~/.local/bin
          curl -fsSL -o ~/.local/bin/dash-network https://raw.github.com/dashevo/dash-network-deploy/master/bin/dash-network
          chmod +x ~/.local/bin/dash-network

      - name: Run smoke tests
        run: ~/.local/bin/dash-network test testnet

  test-suite:
    name: Run test suite
    runs-on: ubuntu-20.04
    steps:
      - name: Clone network configs
        uses: actions/checkout@v3
        with:
          repository: dashevo/dash-network-configs
          token: ${{ secrets.GH_PAT }}

      - name: Install yq
        run: |
          mkdir -p ~/.local/bin
          wget https://github.com/mikefarah/yq/releases/download/v4.24.3/yq_linux_amd64 -O ~/.local/bin/yq
          chmod +x ~/.local/bin/yq
          echo "~/.local/bin" >> $GITHUB_PATH

      - name: Configure network variables
        run: |
          echo "NETWORK=testnet" > .env
          echo "FAUCET_PRIVATE_KEY=${{ secrets.FAUCET_PRIVATE_KEY }}" >> .env
          echo "SKIP_SYNC_BEFORE_HEIGHT=${{ secrets.SKIP_SYNC_BEFORE_HEIGHT }}" >> .env
          echo "DPNS_OWNER_PRIVATE_KEY=$(yq .dpns_hd_private_key testnet.yml)" >> .env
          echo "DASHPAY_OWNER_PRIVATE_KEY=$(yq .dashpay_hd_private_key testnet.yml)" >> .env
          echo "FEATURE_FLAGS_OWNER_PRIVATE_KEY=$(yq .feature_flags_hd_private_key testnet.yml)" >> .env
          echo -n "DAPI_SEED=" >> .env
          awk -F "[= ]" "/^masternode/ {print $5}" testnet.inventory | awk NF | shuf -n1 >> .env

      - name: Run platform test suite
        run: |
          cat $(pwd)/.env && \
          docker run \
          -v $(pwd)/.env:/platform/packages/platform-test-suite/.env \
          strophy/platform-test-suite:latest \
          yarn run test:suite

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3